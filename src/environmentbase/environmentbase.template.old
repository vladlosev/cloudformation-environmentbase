{
"Outputs":{
"templateValidationHash":{
"Description":"Hash of this template that can be used as a simple means of validating whether a template has been changed since it was generated.",
"Value":"cabd57f0c887501b2f691bbc8b01779730dd6afdf18c7d2c5ff8c5bfdfbd0d4d"
},
"dateGenerated":{
"Description":"UTC datetime representation of when this template was generated",
"Value":"2015-07-17 20:30:04.024699"
},
"elbAccessLoggingBucketAndPath":{
"Description":"S3 bucket and key name prefix to use when configuring elb access logs to aggregate to S3",
"Value":{
"Fn::Join":[
"",
[
"arn:aws:s3:::",
{
"Ref":"dualsparkUtilityBucket"
},
""
]
]
}
},
"cloudTrailLoggingBucketAndPath":{
"Description":"S3 bucket and key name prefix to use when configuring CloudTrail to aggregate logs to S3",
"Value":{
"Fn::Join":[
"",
[
"arn:aws:s3:::",
{
"Ref":"dualsparkUtilityBucket"
},
""
]
]
}
}
},
"Resources":{
"publicSubnet1EgressRouteTableAssociation":{
"Type":"AWS::EC2::SubnetRouteTableAssociation",
"Properties":{
"SubnetId":{
"Ref":"publicSubnet1"
},
"RouteTableId":{
"Ref":"publicSubnet1RouteTable"
}
}
},
"publicSubnet0EgressRoute":{
"Type":"AWS::EC2::Route",
"Properties":{
"GatewayId":{
"Ref":"vpcIgw"
},
"DestinationCidrBlock":"0.0.0.0/0",
"RouteTableId":{
"Ref":"publicSubnet0RouteTable"
}
},
"DependsOn":[
"igwVpcAttachment"
]
},
"privateSubnet1EgressRoute":{
"Type":"AWS::EC2::Route",
"Properties":{
"InstanceId":{
"Ref":"public1NATInstance"
},
"DestinationCidrBlock":"0.0.0.0/0",
"RouteTableId":{
"Ref":"privateSubnet1RouteTable"
}
}
},
"privateSubnet1EgressRouteTableAssociation":{
"Type":"AWS::EC2::SubnetRouteTableAssociation",
"Properties":{
"SubnetId":{
"Ref":"privateSubnet1"
},
"RouteTableId":{
"Ref":"privateSubnet1RouteTable"
}
}
},
"public1NATInstance":{
"Type":"AWS::EC2::Instance",
"Properties":{
"SourceDestCheck":"false",
"AvailabilityZone":{
"Fn::FindInMap":[
"RegionMap",
{
"Ref":"AWS::Region"
},
"az1Name"
]
},
"Tags":[
{
"Value":"NAT",
"Key":"Name"
}
],
"ImageId":{
"Fn::FindInMap":[
"RegionMap",
{
"Ref":"AWS::Region"
},
"natAmiId"
]
},
"KeyName":{
"Ref":"ec2Key"
},
"InstanceType":{
"Ref":"natInstanceType"
},
"NetworkInterfaces":[
{
"SubnetId":{
"Ref":"publicSubnet1"
},
"DeviceIndex":"0",
"GroupSet":[
{
"Ref":"publicSubnet1SecurityGroup"
}
],
"DeleteOnTermination":"true",
"AssociatePublicIpAddress":"true"
}
]
}
},
"publicSubnet1EgressRoute":{
"Type":"AWS::EC2::Route",
"Properties":{
"GatewayId":{
"Ref":"vpcIgw"
},
"DestinationCidrBlock":"0.0.0.0/0",
"RouteTableId":{
"Ref":"publicSubnet1RouteTable"
}
},
"DependsOn":[
"igwVpcAttachment"
]
},
"privateSubnet1RouteTable":{
"Type":"AWS::EC2::RouteTable",
"Properties":{
"VpcId":{
"Ref":"vpc"
}
}
},
"vpc":{
"Type":"AWS::EC2::VPC",
"Properties":{
"EnableDnsSupport":"true",
"CidrBlock":{
"Fn::FindInMap":[
"networkAddresses",
"vpcBase",
"cidr"
]
},
"EnableDnsHostnames":"true",
"Tags":[
{
"Value":"ElkStack",
"Key":"Name"
}
]
}
},
"privateSubnet0":{
"Type":"AWS::EC2::Subnet",
"Properties":{
"VpcId":{
"Ref":"vpc"
},
"AvailabilityZone":{
"Fn::FindInMap":[
"RegionMap",
{
"Ref":"AWS::Region"
},
"az0Name"
]
},
"CidrBlock":{
"Fn::FindInMap":[
"networkAddresses",
"subnet0",
"private"
]
}
}
},
"privateSubnet1":{
"Type":"AWS::EC2::Subnet",
"Properties":{
"VpcId":{
"Ref":"vpc"
},
"AvailabilityZone":{
"Fn::FindInMap":[
"RegionMap",
{
"Ref":"AWS::Region"
},
"az1Name"
]
},
"CidrBlock":{
"Fn::FindInMap":[
"networkAddresses",
"subnet1",
"private"
]
}
}
},
"dualsparkUtilityBucket":{
"DeletionPolicy":"Retain",
"Type":"AWS::S3::Bucket",
"Properties":{
"AccessControl":"BucketOwnerFullControl"
}
},
"dualsparkUtilityBucketLoggingPolicy":{
"Type":"AWS::S3::BucketPolicy",
"Properties":{
"PolicyDocument":{
"Statement":[
{
"Action":[
"s3:PutObject"
],
"Resource":{
"Fn::Join":[
"",
[
"arn:aws:s3:::",
{
"Ref":"dualsparkUtilityBucket"
},
"/",
"AWSLogs/",
{
"Ref":"AWS::AccountId"
},
"/*"
]
]
},
"Effect":"Allow",
"Principal":{
"AWS":[
{
"Fn::FindInMap":[
"RegionMap",
{
"Ref":"AWS::Region"
},
"elbAccountId"
]
}
]
}
},
{
"Action":[
"s3:GetBucketAcl"
],
"Resource":{
"Fn::Join":[
"",
[
"arn:aws:s3:::",
{
"Ref":"dualsparkUtilityBucket"
}
]
]
},
"Effect":"Allow",
"Principal":{
"AWS":[
"arn:aws:iam::903692715234:root",
"arn:aws:iam::859597730677:root",
"arn:aws:iam::814480443879:root",
"arn:aws:iam::216624486486:root",
"arn:aws:iam::086441151436:root",
"arn:aws:iam::388731089494:root",
"arn:aws:iam::284668455005:root",
"arn:aws:iam::113285607260:root"
]
}
},
{
"Action":[
"s3:PutObject"
],
"Resource":{
"Fn::Join":[
"",
[
"arn:aws:s3:::",
{
"Ref":"dualsparkUtilityBucket"
},
"/",
"AWSLogs/",
{
"Ref":"AWS::AccountId"
},
"/*"
]
]
},
"Effect":"Allow",
"Condition":{
"StringEquals":{
"s3:x-amz-acl":"bucket-owner-full-control"
}
},
"Principal":{
"AWS":[
"arn:aws:iam::903692715234:root",
"arn:aws:iam::859597730677:root",
"arn:aws:iam::814480443879:root",
"arn:aws:iam::216624486486:root",
"arn:aws:iam::086441151436:root",
"arn:aws:iam::388731089494:root",
"arn:aws:iam::284668455005:root",
"arn:aws:iam::113285607260:root"
]
}
}
]
},
"Bucket":{
"Ref":"dualsparkUtilityBucket"
}
}
},
"vpcIgw":{
"Type":"AWS::EC2::InternetGateway"
},
"publicSubnet0SecurityGroup":{
"Type":"AWS::EC2::SecurityGroup",
"Properties":{
"SecurityGroupIngress":[
{
"ToPort":"-1",
"FromPort":"-1",
"IpProtocol":"-1",
"CidrIp":{
"Fn::FindInMap":[
"networkAddresses",
"subnet0",
"private"
]
}
}
],
"VpcId":{
"Ref":"vpc"
},
"GroupDescription":"Security Group for the public subnet for az 0",
"SecurityGroupEgress":[
{
"ToPort":"-1",
"FromPort":"-1",
"IpProtocol":"-1",
"CidrIp":"0.0.0.0/0"
}
]
}
},
"publicSubnet1":{
"Type":"AWS::EC2::Subnet",
"Properties":{
"VpcId":{
"Ref":"vpc"
},
"AvailabilityZone":{
"Fn::FindInMap":[
"RegionMap",
{
"Ref":"AWS::Region"
},
"az1Name"
]
},
"CidrBlock":{
"Fn::FindInMap":[
"networkAddresses",
"subnet1",
"public"
]
}
}
},
"publicSubnet0":{
"Type":"AWS::EC2::Subnet",
"Properties":{
"VpcId":{
"Ref":"vpc"
},
"AvailabilityZone":{
"Fn::FindInMap":[
"RegionMap",
{
"Ref":"AWS::Region"
},
"az0Name"
]
},
"CidrBlock":{
"Fn::FindInMap":[
"networkAddresses",
"subnet0",
"public"
]
}
}
},
"publicSubnet1RouteTable":{
"Type":"AWS::EC2::RouteTable",
"Properties":{
"VpcId":{
"Ref":"vpc"
}
}
},
"igwVpcAttachment":{
"Type":"AWS::EC2::VPCGatewayAttachment",
"Properties":{
"VpcId":{
"Ref":"vpc"
},
"InternetGatewayId":{
"Ref":"vpcIgw"
}
}
},
"privateSubnet0EgressRouteTableAssociation":{
"Type":"AWS::EC2::SubnetRouteTableAssociation",
"Properties":{
"SubnetId":{
"Ref":"privateSubnet0"
},
"RouteTableId":{
"Ref":"privateSubnet0RouteTable"
}
}
},
"commonSecurityGroup":{
"Type":"AWS::EC2::SecurityGroup",
"Properties":{
"SecurityGroupIngress":[
{
"ToPort":"22",
"FromPort":"22",
"IpProtocol":"tcp",
"CidrIp":{
"Fn::FindInMap":[
"networkAddresses",
"vpcBase",
"cidr"
]
}
}
],
"VpcId":{
"Ref":"vpc"
},
"GroupDescription":"Security Group allows ingress and egress for common usage patterns throughout this deployed infrastructure.",
"SecurityGroupEgress":[
{
"ToPort":"80",
"FromPort":"80",
"IpProtocol":"tcp",
"CidrIp":"0.0.0.0/0"
},
{
"ToPort":"443",
"FromPort":"443",
"IpProtocol":"tcp",
"CidrIp":"0.0.0.0/0"
},
{
"ToPort":"123",
"FromPort":"123",
"IpProtocol":"udp",
"CidrIp":"0.0.0.0/0"
}
]
}
},
"publicSubnet1SecurityGroup":{
"Type":"AWS::EC2::SecurityGroup",
"Properties":{
"SecurityGroupIngress":[
{
"ToPort":"-1",
"FromPort":"-1",
"IpProtocol":"-1",
"CidrIp":{
"Fn::FindInMap":[
"networkAddresses",
"subnet1",
"private"
]
}
}
],
"VpcId":{
"Ref":"vpc"
},
"GroupDescription":"Security Group for the public subnet for az 1",
"SecurityGroupEgress":[
{
"ToPort":"-1",
"FromPort":"-1",
"IpProtocol":"-1",
"CidrIp":"0.0.0.0/0"
}
]
}
},
"publicSubnet0EgressRouteTableAssociation":{
"Type":"AWS::EC2::SubnetRouteTableAssociation",
"Properties":{
"SubnetId":{
"Ref":"publicSubnet0"
},
"RouteTableId":{
"Ref":"publicSubnet0RouteTable"
}
}
},
"privateSubnet0RouteTable":{
"Type":"AWS::EC2::RouteTable",
"Properties":{
"VpcId":{
"Ref":"vpc"
}
}
},
"privateSubnet0EgressRoute":{
"Type":"AWS::EC2::Route",
"Properties":{
"InstanceId":{
"Ref":"public0NATInstance"
},
"DestinationCidrBlock":"0.0.0.0/0",
"RouteTableId":{
"Ref":"privateSubnet0RouteTable"
}
}
},
"public0NATInstance":{
"Type":"AWS::EC2::Instance",
"Properties":{
"SourceDestCheck":"false",
"AvailabilityZone":{
"Fn::FindInMap":[
"RegionMap",
{
"Ref":"AWS::Region"
},
"az0Name"
]
},
"Tags":[
{
"Value":"NAT",
"Key":"Name"
}
],
"ImageId":{
"Fn::FindInMap":[
"RegionMap",
{
"Ref":"AWS::Region"
},
"natAmiId"
]
},
"KeyName":{
"Ref":"ec2Key"
},
"InstanceType":{
"Ref":"natInstanceType"
},
"NetworkInterfaces":[
{
"SubnetId":{
"Ref":"publicSubnet0"
},
"DeviceIndex":"0",
"GroupSet":[
{
"Ref":"publicSubnet0SecurityGroup"
}
],
"DeleteOnTermination":"true",
"AssociatePublicIpAddress":"true"
}
]
}
},
"publicSubnet0RouteTable":{
"Type":"AWS::EC2::RouteTable",
"Properties":{
"VpcId":{
"Ref":"vpc"
}
}
}
},
"Description":"Environment Generator Base deployment.",
"Parameters":{
"remoteAccessLocation":{
"Type":"String",
"Description":"CIDR block identifying the network address space that will be allowed to ingress into public access points within this solution",
"Default":"0.0.0.0/0",
"MinLength":9,
"AllowedPattern":"(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
"MaxLength":18,
"ConstraintDescription":"must be a valid IP CIDR range of the form x.x.x.x/x."
},
"natInstanceType":{
"Default":"t2.micro",
"Type":"String",
"ConstraintDescription":"must be a valid EC2 instance type.",
"Description":"Instance type to use when launching NAT instances.",
"AllowedValues":[
"t2.micro",
"t2.small",
"t2.medium",
"m3.medium",
"m3.large",
"m3.xlarge",
"m3.2xlarge",
"c4.large",
"c4.xlarge",
"c4.2xlarge",
"c4.4xlarge",
"c4.8xlarge",
"c3.large",
"c3.xlarge",
"c3.2xlarge",
"c3.4xlarge",
"c3.8xlarge",
"r3.large",
"r3.xlarge",
"r3.2xlarge",
"r3.4xlarge",
"r3.8xlarge",
"i2.xlarge",
"i2.2xlarge",
"i2.4xlarge",
"i2.8xlarge",
"d2.xlarge",
"d2.2xlarge",
"d2.4xlarge",
"d2.8xlarge",
"g2.2xlarge"
]
},
"ec2Key":{
"Type":"String",
"Description":"Name of an existing EC2 KeyPair to enable SSH access to the instances",
"Default":"dualspark_rsa",
"MinLength":1,
"AllowedPattern":"[\\x20-\\x7E]*",
"MaxLength":255,
"ConstraintDescription":"can only contain ASCII characters."
}
},
"Mappings":{
"networkAddresses":{
"vpcBase":{
"cidr":"172.16.0.0/20"
},
"subnet0":{
"public":"172.16.0.0/24",
"private":"172.16.4.0/22"
},
"subnet1":{
"public":"172.16.1.0/24",
"private":"172.16.8.0/22"
}
},
"RegionMap":{
"us-east-1":{
"amazonLinuxAmiId":"ami-76817c1e",
"az1Name":"us-east-1b",
"az0Name":"us-east-1a",
"natAmiId":"ami-4f9fee26",
"centOS65AmiId":"ami-8997afe0",
"elbAccountId":"127311923021",
"az2Name":"us-east-1d",
"ubuntu1404LtsAmiId":"ami-018c9568",
"az3Name":"us-east-1e"
},
"ap-northeast-1":{
"amazonLinuxAmiId":"ami-29dc9228",
"az1Name":"ap-northeast-1c",
"az0Name":"ap-northeast-1a",
"natAmiId":"ami-5f840e5e",
"centOS65AmiId":"ami-81294380",
"elbAccountId":"582318560864",
"ubuntu1404LtsAmiId":"ami-bddaa2bc"
},
"eu-west-1":{
"amazonLinuxAmiId":"ami-892fe1fe",
"az1Name":"eu-west-1b",
"az0Name":"eu-west-1a",
"natAmiId":"ami-ed352799",
"centOS65AmiId":"ami-42718735",
"elbAccountId":"156460612806",
"az2Name":"eu-west-1c",
"ubuntu1404LtsAmiId":"ami-896c96fe"
},
"ap-southeast-1":{
"amazonLinuxAmiId":"ami-a6b6eaf4",
"az1Name":"ap-southeast-1b",
"az0Name":"ap-southeast-1a",
"natAmiId":"ami-780a432a",
"centOS65AmiId":"ami-a08fd9f2",
"elbAccountId":"114774131450",
"ubuntu1404LtsAmiId":"ami-9a7724c8"
},
"ap-southeast-2":{
"amazonLinuxAmiId":"ami-d9fe9be3",
"az1Name":"ap-southeast-2b",
"az0Name":"ap-southeast-2a",
"natAmiId":"ami-0154c73b",
"centOS65AmiId":"ami-e7138ddd",
"elbAccountId":"783225319266",
"ubuntu1404LtsAmiId":"ami-43128a79"
},
"us-west-2":{
"amazonLinuxAmiId":"ami-d13845e1",
"az1Name":"us-west-2b",
"az0Name":"us-west-2a",
"natAmiId":"ami-69ae8259",
"centOS65AmiId":"ami-b6bdde86",
"elbAccountId":"797873946194",
"az2Name":"us-west-2c",
"ubuntu1404LtsAmiId":"ami-6ac2a85a"
},
"us-gov-west-1":{
"elbAccountId":"048591011584"
},
"us-west-1":{
"amazonLinuxAmiId":"ami-f0d3d4b5",
"az1Name":"us-west-1c",
"az0Name":"us-west-1a",
"natAmiId":"ami-7850793d",
"centOS65AmiId":"ami-1a013c5f",
"elbAccountId":"027434742980",
"ubuntu1404LtsAmiId":"ami-ee4f77ab"
},
"eu-central-1":{
"az1Name":"eu-central-1b",
"az0Name":"eu-central-1a"
},
"sa-east-1":{
"amazonLinuxAmiId":"ami-c9e649d4",
"az1Name":"sa-east-1b",
"az0Name":"sa-east-1a",
"natAmiId":"ami-7660c56b",
"centOS65AmiId":"ami-7d02a260",
"elbAccountId":"507241528517",
"az2Name":"sa-east-1c",
"ubuntu1404LtsAmiId":"ami-7315b76e"
}
}
}
}